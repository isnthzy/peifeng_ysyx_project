// Generated by CIRCT firtool-1.56.0
module PreIF_s(	// @[<stdin>:3:3]
  input         clock,	// @[<stdin>:4:11]
                reset,	// @[<stdin>:5:11]
                PreIF_to_if_ready,	// @[playground/src/PreIF.scala:7:15]
                PreIF_for_id_Br_J_taken,	// @[playground/src/PreIF.scala:7:15]
  input  [31:0] PreIF_for_id_Br_J_target,	// @[playground/src/PreIF.scala:7:15]
  input         PreIF_for_id_flush,	// @[playground/src/PreIF.scala:7:15]
                PreIF_for_ex_epc_taken,	// @[playground/src/PreIF.scala:7:15]
  input  [31:0] PreIF_for_ex_epc_target,	// @[playground/src/PreIF.scala:7:15]
  input         PreIF_for_ex_Br_B_taken,	// @[playground/src/PreIF.scala:7:15]
  input  [31:0] PreIF_for_ex_Br_B_target,	// @[playground/src/PreIF.scala:7:15]
  input         PreIF_for_ex_flush,	// @[playground/src/PreIF.scala:7:15]
                PreIF_raddr_ok,	// @[playground/src/PreIF.scala:7:15]
  output        PreIF_to_if_valid,	// @[playground/src/PreIF.scala:7:15]
  output [31:0] PreIF_to_if_bits_nextpc,	// @[playground/src/PreIF.scala:7:15]
                PreIF_to_if_bits_pc,	// @[playground/src/PreIF.scala:7:15]
                PreIF_mem_addr,	// @[playground/src/PreIF.scala:7:15]
  output        PreIF_read_en	// @[playground/src/PreIF.scala:7:15]
);

  wire        br_modify =
    PreIF_for_ex_Br_B_taken | PreIF_for_ex_epc_taken | PreIF_for_id_Br_J_taken;	// @[playground/src/PreIF.scala:30:31, :35:40]
  wire        fetch_wen = PreIF_to_if_ready & ~br_modify;	// @[playground/src/PreIF.scala:28:31, :30:31, :39:{32,35}]
  wire        PreIF_flush = PreIF_for_ex_flush | PreIF_for_id_flush;	// @[playground/src/PreIF.scala:29:33, :41:35]
  wire        PreIF_ready_go = fetch_wen & PreIF_raddr_ok;	// @[playground/src/PreIF.scala:27:36, :28:31, :43:30]
  reg  [31:0] PreIF_pc;	// @[playground/src/PreIF.scala:51:29]
  wire [31:0] PreIF_snpc = PreIF_pc + 32'h4;	// @[playground/src/PreIF.scala:51:29, :52:36, :56:26]
  wire [31:0] PreIF_dnpc =
    PreIF_for_ex_epc_taken
      ? PreIF_for_ex_epc_target
      : PreIF_for_ex_Br_B_taken ? PreIF_for_ex_Br_B_target : PreIF_for_id_Br_J_target;	// @[playground/src/PreIF.scala:48:17, :53:36, :57:20]
  wire [31:0] PreIF_nextpc =
    PreIF_for_id_Br_J_taken | PreIF_for_ex_Br_B_taken | PreIF_for_ex_epc_taken
      ? PreIF_dnpc
      : PreIF_snpc;	// @[playground/src/PreIF.scala:52:36, :53:36, :54:36, :58:{21,31}]
  always @(posedge clock) begin	// @[<stdin>:4:11]
    if (reset)	// @[<stdin>:4:11]
      PreIF_pc <= 32'h80000000;	// @[playground/src/PreIF.scala:51:29]
    else if (PreIF_ready_go | br_modify)	// @[playground/src/PreIF.scala:27:36, :30:31, :69:23]
      PreIF_pc <= PreIF_nextpc;	// @[playground/src/PreIF.scala:51:29, :54:36]
  end // always @(posedge)
  assign PreIF_to_if_valid = ~PreIF_flush & ~reset & PreIF_ready_go;	// @[<stdin>:3:3, playground/src/PreIF.scala:27:36, :29:33, :44:{26,48}]
  assign PreIF_to_if_bits_nextpc = PreIF_nextpc;	// @[<stdin>:3:3, playground/src/PreIF.scala:54:36]
  assign PreIF_to_if_bits_pc = PreIF_pc;	// @[<stdin>:3:3, playground/src/PreIF.scala:51:29]
  assign PreIF_mem_addr = PreIF_pc;	// @[<stdin>:3:3, playground/src/PreIF.scala:51:29]
  assign PreIF_read_en = fetch_wen;	// @[<stdin>:3:3, playground/src/PreIF.scala:28:31]
endmodule

