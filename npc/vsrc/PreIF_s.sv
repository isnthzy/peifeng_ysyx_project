// Generated by CIRCT firtool-1.56.0
module PreIF_s(	// @[<stdin>:3:3]
  input         clock,	// @[<stdin>:4:11]
                reset,	// @[<stdin>:5:11]
                PreIF_to_if_ready,	// @[playground/src/PreIF.scala:7:15]
                PreIF_for_id_Br_J_taken,	// @[playground/src/PreIF.scala:7:15]
  input  [31:0] PreIF_for_id_Br_J_target,	// @[playground/src/PreIF.scala:7:15]
  input         PreIF_for_id_flush,	// @[playground/src/PreIF.scala:7:15]
                PreIF_for_ex_epc_taken,	// @[playground/src/PreIF.scala:7:15]
  input  [31:0] PreIF_for_ex_epc_target,	// @[playground/src/PreIF.scala:7:15]
  input         PreIF_for_ex_Br_B_taken,	// @[playground/src/PreIF.scala:7:15]
  input  [31:0] PreIF_for_ex_Br_B_target,	// @[playground/src/PreIF.scala:7:15]
  input         PreIF_for_ex_flush,	// @[playground/src/PreIF.scala:7:15]
                PreIF_ar_ready,	// @[playground/src/PreIF.scala:7:15]
  output        PreIF_to_if_valid,	// @[playground/src/PreIF.scala:7:15]
  output [31:0] PreIF_to_if_bits_nextpc,	// @[playground/src/PreIF.scala:7:15]
                PreIF_to_if_bits_pc,	// @[playground/src/PreIF.scala:7:15]
  output        PreIF_ar_valid,	// @[playground/src/PreIF.scala:7:15]
  output [31:0] PreIF_ar_bits_addr	// @[playground/src/PreIF.scala:7:15]
);

  reg         arvalidReg;	// @[playground/src/PreIF.scala:56:25]
  wire        br_modify =
    PreIF_for_ex_Br_B_taken | PreIF_for_ex_epc_taken | PreIF_for_id_Br_J_taken;	// @[playground/src/PreIF.scala:21:31, :26:40]
  wire        fetch_wen = PreIF_to_if_ready & ~br_modify;	// @[playground/src/PreIF.scala:19:31, :21:31, :30:{32,35}]
  wire        PreIF_flush = PreIF_for_ex_flush | PreIF_for_id_flush;	// @[playground/src/PreIF.scala:20:33, :32:35]
  wire        PreIF_ready_go = fetch_wen & PreIF_ar_ready & arvalidReg;	// @[playground/src/PreIF.scala:18:36, :19:31, :34:30, :56:25]
  reg  [31:0] PreIF_pc;	// @[playground/src/PreIF.scala:42:29]
  wire [31:0] PreIF_snpc = PreIF_pc + 32'h4;	// @[playground/src/PreIF.scala:42:29, :43:36, :47:26]
  wire [31:0] PreIF_dnpc =
    PreIF_for_ex_epc_taken
      ? PreIF_for_ex_epc_target
      : PreIF_for_id_Br_J_taken ? PreIF_for_id_Br_J_target : PreIF_for_ex_Br_B_target;	// @[playground/src/PreIF.scala:39:17, :44:36, :48:20]
  wire [31:0] PreIF_nextpc =
    PreIF_for_id_Br_J_taken | PreIF_for_ex_Br_B_taken | PreIF_for_ex_epc_taken
      ? PreIF_dnpc
      : PreIF_snpc;	// @[playground/src/PreIF.scala:43:36, :44:36, :45:36, :49:{21,31}]
  reg  [31:0] araddrReg;	// @[playground/src/PreIF.scala:57:24]
  reg         ReadRequstState;	// @[playground/src/PreIF.scala:60:30]
  wire        _GEN = ReadRequstState & PreIF_ar_ready;	// @[playground/src/PreIF.scala:60:30, :67:46, :68:25, :69:22]
  always @(posedge clock) begin	// @[<stdin>:4:11]
    if (reset) begin	// @[<stdin>:4:11]
      PreIF_pc <= 32'h80000000;	// @[playground/src/PreIF.scala:42:29]
      arvalidReg <= 1'h0;	// @[playground/src/PreIF.scala:30:35, :56:25]
      araddrReg <= 32'h0;	// @[playground/src/PreIF.scala:57:24]
      ReadRequstState <= 1'h0;	// @[playground/src/PreIF.scala:30:35, :60:30]
    end
    else begin	// @[<stdin>:4:11]
      if (PreIF_ready_go | br_modify)	// @[playground/src/PreIF.scala:18:36, :21:31, :98:23]
        PreIF_pc <= PreIF_nextpc;	// @[playground/src/PreIF.scala:42:29, :45:36]
      if (ReadRequstState) begin	// @[playground/src/PreIF.scala:60:30]
        arvalidReg <= ~_GEN & arvalidReg;	// @[playground/src/PreIF.scala:56:25, :60:30, :67:46, :68:25, :69:22, :70:17]
        ReadRequstState <= ~_GEN & ReadRequstState;	// @[playground/src/PreIF.scala:60:30, :67:46, :68:25, :69:22]
      end
      else begin	// @[playground/src/PreIF.scala:60:30]
        arvalidReg <= fetch_wen | arvalidReg;	// @[playground/src/PreIF.scala:19:31, :56:25, :62:20, :65:17]
        ReadRequstState <= fetch_wen | ReadRequstState;	// @[playground/src/PreIF.scala:19:31, :60:30, :62:20, :63:22]
      end
      if (~ReadRequstState & fetch_wen)	// @[playground/src/PreIF.scala:19:31, :57:24, :60:30, :61:{23,34}, :62:20, :64:16]
        araddrReg <= PreIF_pc;	// @[playground/src/PreIF.scala:42:29, :57:24]
    end
  end // always @(posedge)
  assign PreIF_to_if_valid = ~PreIF_flush & ~reset & PreIF_ready_go;	// @[<stdin>:3:3, playground/src/PreIF.scala:18:36, :20:33, :35:{26,48}]
  assign PreIF_to_if_bits_nextpc = PreIF_nextpc;	// @[<stdin>:3:3, playground/src/PreIF.scala:45:36]
  assign PreIF_to_if_bits_pc = PreIF_pc;	// @[<stdin>:3:3, playground/src/PreIF.scala:42:29]
  assign PreIF_ar_valid = arvalidReg;	// @[<stdin>:3:3, playground/src/PreIF.scala:56:25]
  assign PreIF_ar_bits_addr = araddrReg;	// @[<stdin>:3:3, playground/src/PreIF.scala:57:24]
endmodule

