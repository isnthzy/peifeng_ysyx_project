// Generated by CIRCT firtool-1.56.0
module IF_stage(	// @[<stdin>:56:3]
  input         clock,	// @[<stdin>:57:11]
                reset,	// @[<stdin>:58:11]
                IF_IO_valid,	// @[playground/src/IF_stage.scala:7:12]
  input  [31:0] IF_IO_bits_nextpc,	// @[playground/src/IF_stage.scala:7:12]
                IF_IO_bits_pc,	// @[playground/src/IF_stage.scala:7:12]
  input         IF_to_id_ready,	// @[playground/src/IF_stage.scala:7:12]
                IF_for_id_flush,	// @[playground/src/IF_stage.scala:7:12]
                IF_for_ex_flush,	// @[playground/src/IF_stage.scala:7:12]
  input  [31:0] IF_rdata,	// @[playground/src/IF_stage.scala:7:12]
  input         IF_rdata_ok,	// @[playground/src/IF_stage.scala:7:12]
  output        IF_IO_ready,	// @[playground/src/IF_stage.scala:7:12]
                IF_to_id_valid,	// @[playground/src/IF_stage.scala:7:12]
  output [31:0] IF_to_id_bits_nextpc,	// @[playground/src/IF_stage.scala:7:12]
                IF_to_id_bits_pc,	// @[playground/src/IF_stage.scala:7:12]
                IF_to_id_bits_inst	// @[playground/src/IF_stage.scala:7:12]
);

  wire        if_flush = IF_for_ex_flush | IF_for_id_flush;	// @[playground/src/IF_stage.scala:21:30, :22:30]
  reg         if_valid;	// @[playground/src/IF_stage.scala:24:33]
  wire        if_inst_ok;	// @[playground/src/IF_stage.scala:20:32]
  wire        if_clog = ~if_inst_ok & if_valid;	// @[playground/src/IF_stage.scala:18:29, :20:32, :24:33, :26:{13,24}]
  wire        if_ready_go = ~if_clog;	// @[playground/src/IF_stage.scala:18:29, :24:33, :25:33, :27:19]
  wire        _IF_IO_ready_output = ~if_valid | if_ready_go & IF_to_id_ready;	// @[playground/src/IF_stage.scala:24:33, :25:33, :28:{17,27,42}]
  reg         if_inst_ok_buffer;	// @[playground/src/IF_stage.scala:35:42]
  reg  [31:0] if_inst_buffer;	// @[playground/src/IF_stage.scala:36:39]
  reg         if_use_inst_buffer;	// @[playground/src/IF_stage.scala:37:43]
  wire [31:0] if_inst = if_use_inst_buffer ? if_inst_buffer : IF_rdata;	// @[playground/src/IF_stage.scala:19:36, :36:39, :37:43, :38:15]
  assign if_inst_ok = IF_rdata_ok | if_inst_ok_buffer;	// @[playground/src/IF_stage.scala:20:32, :35:42, :39:13, :44:20, :48:15]
  wire        _GEN = _IF_IO_ready_output & IF_IO_valid;	// @[playground/src/IF_stage.scala:28:27, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  always @(posedge clock) begin	// @[<stdin>:57:11]
    if (reset) begin	// @[<stdin>:57:11]
      if_valid <= 1'h0;	// @[playground/src/IF_stage.scala:24:33]
      if_inst_ok_buffer <= 1'h0;	// @[playground/src/IF_stage.scala:24:33, :35:42]
      if_inst_buffer <= 32'h0;	// @[playground/src/IF_stage.scala:19:36, :36:39]
      if_use_inst_buffer <= 1'h0;	// @[playground/src/IF_stage.scala:24:33, :37:43]
    end
    else begin	// @[<stdin>:57:11]
      if (_IF_IO_ready_output)	// @[playground/src/IF_stage.scala:28:27]
        if_valid <= IF_IO_valid;	// @[playground/src/IF_stage.scala:24:33]
      if_inst_ok_buffer <= IF_rdata_ok | ~_GEN & if_inst_ok_buffer;	// @[playground/src/IF_stage.scala:35:42, :37:43, :40:19, :41:23, :42:22, :44:20, :47:22, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      if (IF_rdata_ok)	// @[playground/src/IF_stage.scala:7:12]
        if_inst_buffer <= IF_rdata;	// @[playground/src/IF_stage.scala:36:39]
      if_use_inst_buffer <= IF_rdata_ok | ~_GEN & if_use_inst_buffer;	// @[playground/src/IF_stage.scala:37:43, :40:19, :41:23, :44:20, :46:23, src/main/scala/chisel3/util/Decoupled.scala:52:35]
    end
  end // always @(posedge)
  assign IF_IO_ready = _IF_IO_ready_output;	// @[<stdin>:56:3, playground/src/IF_stage.scala:28:27]
  assign IF_to_id_valid = ~if_flush & if_valid & if_ready_go;	// @[<stdin>:56:3, playground/src/IF_stage.scala:21:30, :24:33, :25:33, :32:22]
  assign IF_to_id_bits_nextpc = IF_IO_bits_nextpc;	// @[<stdin>:56:3]
  assign IF_to_id_bits_pc = IF_IO_bits_pc;	// @[<stdin>:56:3]
  assign IF_to_id_bits_inst = if_inst;	// @[<stdin>:56:3, playground/src/IF_stage.scala:19:36]
endmodule

